"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Can be used as an argument to upload files using https://github.com/jaydenseric/graphql-multipart-request-spec"
scalar Upload @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")


#import referral/*.graphql
#import tracks/*.graphql
#import album/*.graphql
#import cover/*.graphql
#import lyrics/*.graphql
#import challenge/*.graphql
#import vote/*.graphql
#import setting/*.graphql

type Query {
    # |--------------------------------------------------------------------------
    # | Current user
    # |--------------------------------------------------------------------------
    # |
    # | Section assigned to queries on the current user model
    # |
    """Get the current user instance"""
    me: User @auth
}

type Mutation {
    # |--------------------------------------------------------------------------
    # | Current user
    # |--------------------------------------------------------------------------
    # |
    # | Section assigned to queries on the current user model
    # |
    doNothing: User @auth
}

union Taggable = Track | Album | Lyric | Cover

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    referral: Referral! @hasOne
    #referred: [Referral]! @hasMany
    #referredBy: []
    createdLyrics: [Lyric!]! @hasMany
    ownedLyrics: [Lyric!]! @hasMany
    createdCovers: [Cover!]! @hasMany
    ownedCovers: [Cover!]! @hasMany
    createdAlbum: [Album!]! @hasMany
    ownedAlbum: [Album!]! @hasMany
}
