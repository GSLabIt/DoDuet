#!/bin/bash

update () {
    echo -en "[ ]\tUpdating repositories"
    apt update 1>/dev/null 2>&1
    echo -e "\r[+]\tUpdating repositories"
}

upgrade () {
    echo -en "[ ]\tUpgrading repositories"
    apt -y upgrade 1>/dev/null 2>&1
    echo -e "\r[+]\tUpgrading repositories"
}

install () {
    echo -en "[ ]\tInstalling $1"
    apt -y install $1 1>/dev/null 2>&1
    echo -e "\r[+]\tInstalling $1"
}

utilities () {
	echo -e "[ ]\tInstalling utilities"
	for pack in lsb-release ca-certificates apt-transport-https software-properties-common; do
		install $pack
	done
	echo -e "[+]\tInstalling utilities"
}

checkArch () {
	arch=$(uname -a)
	shopt -s nocasematch
	if [[ $arch =~ "ubuntu" ]]; then
	    shopt -u nocasematch
	    echo "ubuntu"
	else
	    shopt -u nocasematch
	    echo "debian"
	fi
}

php8OnDebian () {
    echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" | tee /etc/apt/sources.list.d/sury-php.list
    wget -qO - https://packages.sury.org/php/apt.gpg | apt-key add - 1>/dev/null 2>&1
    update
    upgrade
}
php8OnUbuntu () {
    echo -e "\n" | add-apt-repository ppa:ondrej/php 1>/dev/null 2>&1
    update
    upgrade
}

setupPHP8Repo () {
    echo -en "[ ]\tChecking arch"
    arch=$(checkArch)
    echo -e "\r[+]\tArch is $arch"
    if [[ $arch == "debian" ]]; then
        php8OnDebian
    else
        php8OnUbuntu
    fi
}

a2setup () {
    echo -en "[ ]\tEnabling apache mods"
    a2enmod deflate proxy_fcgi setenvif http2 headers php8.0 ssl rewrite 1>/dev/null 2>&1
    echo -e "\r[+]\tEnabling apache mods"
    echo -en "[ ]\tEnabling apache configurations"
    a2enconf php8.0-fpm 1>/dev/null 2>&1
    echo -e "\r[+]\tEnabling apache configurations"
    echo -en "[ ]\tRestarting apache"
    systemctl restart apache2 1>/dev/null 2>&1
    echo -e "\r[+]\tRestarting apache"
}

a2secure () {
    echo -en "[ ]\tSecuring apache"
    a2dismod info 1>/dev/null 2>&1
    sed -i "s/ServerSignature On/ServerSignature Off/g" /etc/apache2/conf-available/security.conf
    sed -i "s/ServerTokens OS/ServerTokens Prod/g" /etc/apache2/conf-available/security.conf
    sed -i 's/#Header set X-Content-Type-Options: "nosniff"/Header set X-Content-Type-Options: "nosniff"/g' /etc/apache2/conf-available/security.conf
    sed -i 's/#Header set X-Frame-Options: "sameorigin"/Header set X-Frame-Options: "sameorigin"/g' /etc/apache2/conf-available/security.conf
    echo 'Header set X-XSS-Protection: "1; mode=block"' >> /etc/apache2/conf-available/security.conf
    a2enconf security 1>/dev/null 2>&1
    sed -i 's/Options Indexes FollowSymLinks/Options -Indexes -Includes FollowSymLinks/g' /etc/apache2/apache2.conf
    sed -i 's/AllowOverride None/AllowOverride All/g' /etc/apache2/apache2.conf
    systemctl restart apache2 1>/dev/null 2>&1
    echo -e "\r[+]\tSecuring apache"
}

nvmInstall () {
    echo -en "[ ]\tInstalling nvm"
    curl -s -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash 1>/dev/null 2>&1
    echo -e "\r[+]\tInstalling nvm"
    echo "Please add the following lines to the user .bashrc inside the home in order to enable nvm usage: "
    # shellcheck disable=SC2016
    echo 'export NVM_DIR="$HOME/.nvm"'
    # shellcheck disable=SC2016
    echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm'
    # shellcheck disable=SC2016
    echo '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion'

    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

    nvm install 14.16.0 1>/dev/null 2>&1
}
npmInstall () {
    echo -en "[ ]\t[NPM] Installing $1"
    npm install $1 1>/dev/null 2>&1
    echo -e "\r[+]\t[NPM] Installing $1"
}
npmGlobalInstall () {
    echo -en "[ ]\t[NPM] Installing globally $1"
    npm install -g $1 1>/dev/null 2>&1
    echo -e "\r[+]\t[NPM] Installing globally $1"
}

peclInstallEV () {
    pecl channel-update pecl.php.net
    echo -e "\n" | pecl install ev 1>/dev/null 2>&1

    for file in /etc/php/8.0/apache2/php.ini /etc/php/8.0/cgi/php.ini /etc/php/8.0/cli/php.ini /etc/php/8.0/fpm/php.ini; do
        if ! grep -q "extension=ev.so" "$file"; then
            echo "extension=ev.so" >> $file
        fi
    done
}

createWebsocketUser () {
    id -u laravel-echo &>/dev/null || useradd laravel-echo
    cat >> /etc/security/limits.d/laravel-echo.conf <<EOF
    laravel-echo    soft    nofile  100000
EOF
}

if [ "$EUID" -ne 0 ]; then
    echo "This tool must be run as root, please do not run as sudo"
    exit
fi


update
upgrade
utilities
setupPHP8Repo
for pck in php8.0 php8.0-{bcmath,bz2,cgi,cli,common,curl,decimal,dev,enchant,fpm,gd,imagick,inotify,intl,mbstring,mcrypt,mysql,redis,uuid,xml,xmlrpc,xsl,zip}; do
    install $pck
done
for pck in sendmail fail2ban mariadb-server redis-server apache2 libapache2-mod-php8.0 libapache2-mod-fcgid libsodium-dev; do
    install $pck
done
for pck in jpegoptim optipng pngquant gifsicle; do
    install $pck
done
a2setup
a2secure
nvmInstall
npmGlobalInstall svgo
peclInstallEV
